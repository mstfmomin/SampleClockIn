@using Microsoft.AspNet.Identity
@model SampleClockin.Models.TimeDataContext

<div class="page-container">
    <div class="container">
        <div class="row row-offcanvas row-offcanvas-left">

            <!-- sidebar -->
            <div class="col-xs-6 col-sm-3 sidebar-offcanvas" id="sidebar" role="banner">
                <div class="pull-left navbar-text">
                    <div>
                        <img src="http://placehold.it/150x150">
                    </div>
                    @Html.ActionLink(User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
                    <br />
                    <br />
                    <br />
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div>
                            <input type="submit" value="ClockIn" name="buttonType" class="btn btn-warning btn-lg" id="hide" />
                        </div>
                        <br />
                        <div>
                            <input type="submit" value="ClockOut" name="buttonType" class="btn btn-warning btn-lg" id="show" />
                        </div>
                        @*<div>
@using (Html.BeginForm())
{
    var worktype = from wt in Model.Times
                   select 
    @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(model => model.Times, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Times, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Times, "", new { @class = "text-danger" })
            </div>
    </div>
}
                        </div>*@
                    }
                </div>
            </div>
            <!-- main area -->
            <div class="col-xs-12 col-sm-9">
                <h1>Time Card</h1>
                <p>Today: @DateTime.Now</p>

                <div class="container">
                    <div class="row">
                        <div class="col-sm-3">
                            <h3> Clock IN</h3>
                        </div>

                        <div class="col-sm-3">
                            <h3> Clock OUT</h3>

                        </div>

                        <div class="col-sm-3">
                            <h3> Total Hours</h3>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-3">
                            @foreach (var d in Model.Times) // We reference the dbcontext's sets directly
                            {
                                @d.ClockIn <br />
                            }

                        </div>

                        <div class="col-sm-3">
                            @foreach (var d in Model.Times1) // We reference the dbcontext's sets directly
                            {
                                @d.ClockOut  <br />
                            }

                        </div>
                        <div class="col-sm-3">

                            @{                               
                                var query = from t in Model.Times
                                            join t1 in Model.Times1 on t.ID equals t1.ID
                                            select new { t.ClockIn, t1.ClockOut };                                             
                            }
                            @foreach (var group in query) // We reference the dbcontext's sets directly
                            {                                                             
                                var t = group.ClockOut-group.ClockIn;                               
                                @t <br />
                            }
                        </div>
                    </div>
                </div>
            </div><!-- /.col-xs-12 main -->
        </div><!--/.row-->
    </div><!--/.container-->
</div><!--/.page-container-->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
